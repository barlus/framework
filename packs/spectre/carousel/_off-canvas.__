import {$,list,media,nest,percent,rem,rgba,s,stylesheet,translateX} from "@barlus/restyle"

export default Theme;
export const enum Theme {
    active='active',
    offCanvas='off-canvas',
    offCanvasContent='off-canvas-content',
    offCanvasOverlay='off-canvas-overlay',
    offCanvasSidebar='off-canvas-sidebar',
    offCanvasSidebarShow='off-canvas-sidebar-show',
    offCanvasToggle='off-canvas-toggle',
}
declare module "@barlus/restyle" {
    interface Context {
        offCanvasBreakpoint:any,
    }
}

$.offCanvasBreakpoint = $.sizeLg;

stylesheet('/Users/Sergey/Work/EXP/spectre/scss/_off-canvas.ts')('',{
    ...nest([`.${Theme.offCanvas}`],{
        display:'flex',
        flexFlow:'nowrap',
        height:percent(100),
        position:'relative',
        width:percent(100),
        ...nest([`.${Theme.offCanvasToggle}`],{
            display:'block',
            position:'absolute',
            top:$.layoutSpacing,
            transition:'none',
            zIndex:$.zIndex0,
            left:$.layoutSpacing,
        }),
        ...nest([`.${Theme.offCanvasSidebar}`],{
            background:$.bgColor,
            bottom:0,
            minWidth:rem(10),
            overflowY:'auto',
            position:'fixed',
            top:0,
            transition:list('transform',s(.25),'ease'),
            zIndex:$.zIndex2,
            left:0,
            transform:translateX(percent(-100)),
        }),
        ...nest([`.${Theme.offCanvasContent}`],{
            flex:list(1,1,'auto'),
            height:percent(100),
            padding:list($.layoutSpacing,$.layoutSpacing,$.layoutSpacing,rem(4)),
        }),
        ...nest([`.${Theme.offCanvasOverlay}`],{
            background:rgba($.darkColor,.1),
            borderColor:'transparent',
            borderRadius:0,
            bottom:0,
            display:'none',
            height:percent(100),
            left:0,
            position:'fixed',
            right:0,
            top:0,
            width:percent(100),
        }),
        ...nest([`.${Theme.offCanvasSidebar}`],{
            ...nest([`&:target`,`&.${Theme.active}`],{
                transform:translateX(0),
            }),
            ...nest([`&:target ~ .${Theme.offCanvasOverlay}`,`&.${Theme.active} ~ .off-canvas-overlay`],{
                display:'block',
                zIndex:$.zIndex1,
            }),
        }),
    }),
    ...media({minWidth:$.offCanvasBreakpoint}, {
        ...nest([`.${Theme.offCanvas}`],{
            ...nest([`&.${Theme.offCanvasSidebarShow}`],{
                ...nest([`.${Theme.offCanvasToggle}`],{
                    display:'none',
                }),
                ...nest([`.${Theme.offCanvasSidebar}`],{
                    flex:list(0,0,'auto'),
                    position:'relative',
                    transform:'none',
                }),
            }),
        }),
    }),
});
